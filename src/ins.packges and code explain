 # Install html2canvas for converting HTML to canvas
npm install html2canvas

# Install jsPDF for generating PDFs
npm install jspdf

# Install react-pdf for rendering PDFs
npm install @react-pdf/renderer

# Install react-to-print for printing components
npm install react-to-print

# install xlsx - NPM to print in excel sheet 
npm i xlsx


------------------------------------------------------------------------------------------------------------------------------
# explain PDF-KIT code :=>----------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------

                  
                    #  <----------------------- 1. Main Component (Main) --------------------->  #

The `Main` component handles the conversion of a table (generated by the Table component) into a PDF file. It uses the html2canvas and jsPDF libraries to capture the table as an image and convert it to a downloadable PDF.

#=> State and Ref Management:-
    -> `useRef` is used to reference the table that will be converted to a PDF.
    -> `tableRef` stores a reference to the DOM element that contains the table.

#=> The printDocument Function:-
    -> This function captures the table as an image using the html2canvas library.
    -> How it works:
       ->- It gets the current value of `tableRef` (which refers to the table inside the Table component).
       ->- `html2canvas` converts the table to a canvas image.
       ->- The canvas is transformed into an image (PNG format), which is then added to the `jsPDF` instance to `generate the PDF`.
       ->- The image is added to the PDF, and additional pages are created if the image is larger than one page (split over multiple pages).
       ->- (   pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);  )
       ->- This line adds the image to the PDF at position (0, 0).

    -> Table Rendering:
       ->- The Table component is rendered inside the divToPrint container, which is later captured and converted into the PDF.


                    #  <----------------------- 2. Table Component (Table) --------------------->  #

The `Table` component is a form that takes user inputs for name and email, displays the data in a table, and allows adding new rows to the table. This component is wrapped with forwardRef to pass the ref from the parent Main component to the table for conversion to PDF.


                    #  <----------------------- 3. ExportPdf Component (ExportPdf) --------------------->  #

The `ExportPdf` component provides another way to generate a PDF by using the react-to-print library, which prints HTML content as a PDF.

#=> Key Parts:
   -> Component Ref:
          ->- useRef is used to create a reference (componentRef) to the Table component.

   -> ReactToPrint:
          ->- The `ReactToPrint` library is used to trigger the print action and convert the referenced HTML content into a PDF.
          ->- trigger: Defines the button that users click to start the print process.
          ->- content: Specifies the content (the table) that will be converted to a PDF.

       <ReactToPrint 
           content={() => componentRef.current} 
           trigger={() => <button className="btn btn-primary">Print to PDF! <button>}
       />
        ->- The content function specifies that componentRef (the table) should be printed.


                    #  <----------------------- 4. MyDocument Component (MyDocument) --------------------->  #

This component uses the Document and Page components, typically from react-pdf (although the import is missing in your code). These components are designed to create a PDF in a declarative manner by structuring content using views, text, and pages.

#=> Document Structure:
        ->- It declares a document with multiple pages. Each Page contains View components with Text elements inside.

        <Document>
            <Page size="A4" style={styles.page}>
                 <View style={styles.section}>
                     <Text>Section #1</Text>
                 </View>
                 <View style={styles.section}>
                     <Text>Section #2</Text>
                 </View>
            </Page>
        </Document>


                    #  <----------------------- Libraries Used: --------------------->  #

#=> html2canvas:
      -> Converts HTML elements into a canvas, which can be treated like an image.
      -> Useful here for capturing the table in image form before converting it to a PDF.

#=> jsPDF:
      -> A JavaScript library for generating PDF files.
      -> The addImage function allows adding images (from html2canvas) to the PDF.
      -> addPage creates additional pages when the content exceeds one page in size.

#=> ReactToPrint:
      -> Provides a simple way to print React components.
      -> In this case, it's used to convert the table into a PDF and trigger a print dialog.

#=> forwardRef:
      -> A React API that enables passing ref from a parent component to a child component. This is used to allow the parent Main component to access the Table DOM element.